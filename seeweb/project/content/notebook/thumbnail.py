"""Set of functions to explore the content of a project i.e. its sources
"""
import base64
from io import BytesIO
import nbformat
from PIL import Image, ImageDraw, ImageFont


def create_thumbnail(item, **kwds):
    """Create thumbnail associated to some content item.

    Args:
        item: (ContentItem)
        kwds: (dict of any) extra parameters

    Returns:
        Image or None if no thumbnail can be generated
    """
    # find last image generated by notebook
    nbdef = item.load_definition()
    if nbdef is None:
        return None

    nbdef = nbformat.convert(nbformat.from_dict(nbdef), 4)

    # if 'cells' not in nbdef:  # TODO workaround
    #     nbdef = nbdef['worksheets'][0]

    for cell in reversed(nbdef.cells):
        if cell.cell_type == 'code':
            for out in cell.outputs:
                if out.output_type in ("display_data", "execute_result"):
                    for mime_type, data in out.data.items():
                        if mime_type == "image/png":
                            img = Image.open(BytesIO(base64.b64decode(data)))
                            return img

    img = Image.new("RGBA", (512, 512), "green")
    draw = ImageDraw.Draw(img)
    font = ImageFont.truetype("arial.ttf", 240)
    draw.text((100, 100), "NB", fill="blue", font=font)

    return img
