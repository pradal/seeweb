{% extends "templates/project/layout_content.jinja2" %}

{% block project_css -%}

<link href="{{ request.static_url('seeweb:project/content/workflow_node/static/style.css') }}" rel="stylesheet">

<script type="text/javascript" src="{{ request.static_url('seeweb:project/content/workflow/static/eve.js') }}"></script>
<script type="text/javascript" src="{{ request.static_url('seeweb:project/content/workflow/static/raphael.js') }}"></script>

{%- endblock %}

{% block project_content_body -%}

<div id="node_canvas">
</div>

<p>Descr: {{ cnt_item.description }}</p>
<p>Function: {{ cnt_def['function'] }}</p>

<p>Def: {{ cnt_item.definition }}</p>

{%- endblock %}

{% block project_js -%}

<script>
    window.onload = function() {
        var ndef = JSON.parse('{{ cnt_item.definition|safe }}');

        var vw = 800;
        var vh = 300;
        var paper = new Raphael(document.getElementById('node_canvas'), vw, vh);

        var ori_x = vw / 2.;
        var ori_y = vh / 2.;

        // body
        var nw = 300;
        var nh = 150;

        var bg = paper.rect(ori_x - nw / 2., ori_y - nh / 2., nw, nh, 15);
        bg.attr({'gradient': '90-#8c8cff-#c8c8c8',
                 'stroke': '#808080',
                 'stroke-width': 1,
                 'stroke-linejoin': 'round'});

        // ports
        var pr = 15;

        var nb = ndef.inputs.length;
        for (i in ndef.inputs){
            var input = ndef.inputs[i];
            var port = paper.circle(ori_x - (nb - 1) * 3 * pr + i * pr * 6,
                                    ori_y + -nh / 2.,
                                    pr);
            port.attr({'gradient': '180-#3333ff-#2222ff',
                       'stroke': '#000000',
                       'stroke-width': 1});

            var label = paper.text(ori_x - (nb - 1) * 3 * pr + i * pr * 6,
                                   ori_y - nh / 2. - 2 * pr,
                                   input['name'] + " (" + input['interface'] + ")");

            label.attr({'fill': '#000000',
                        'font-size': '18px',
                        'font-family': 'verdana'});
        }

        nb = ndef.outputs.length;
        for (i in ndef.outputs){
            var output = ndef.outputs[i];
            var port = paper.circle(ori_x - (nb - 1) * 3 * pr + i * pr * 6,
                                    ori_y + nh / 2.,
                                    pr);
            port.attr({'gradient': '180-#ffff33-#9a9a00',
                       'stroke': '#000000',
                       'stroke-width': 1});

            var label = paper.text(ori_x - (nb - 1) * 3 * pr + i * pr * 6,
                                   ori_y + nh / 2. + 2 * pr,
                                   output['name'] + " (" + output['interface'] + ")");

            label.attr({'fill': '#000000',
                        'font-size': '18px',
                        'font-family': 'verdana'});
        }

        // label
        var label = paper.text(ori_x, ori_y, ndef['name']);
        label.attr({'fill': '#000000',
                    'font-size': '18px',
                    'font-family': 'verdana'});
    }
</script>

{%- endblock %}
