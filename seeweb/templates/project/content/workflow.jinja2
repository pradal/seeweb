{% macro workflow_condensed(workflow) -%}
<div class="workflow condensed">
    <a href="{{ request.route_url('project_view_workflow', pid=project.id, wid=workflow.id) }}">{{ workflow.name }}</a>
</div>
{%- endmacro %}


{% extends "layout_workflow.jinja2" %}

{% block project_css %}
    <script src="https://code.createjs.com/easeljs-0.8.2.min.js"></script>
{% endblock project_css %}

{% block workflow_body %}

<h2>About to see a workflow</h2>

<body onload="init();">
    <canvas id="workflow_canvas" width="500" height="300">
        <p>Workflow visual display</p>
    </canvas>
</body>

{% endblock %}

{% block project_js %}
<script>
    var stage, output;

    function init() {
        stage = new createjs.Stage("workflow_canvas");
        stage.enableMouseOver();

        output = new createjs.Text("Test press, click, doubleclick, mouseover, and mouseout", "14px Arial");
        output.x = output.y = 10;
        stage.addChild(output);

        {% for node in workflow.nodes %}
            var item = new createjs.Shape();
            item.graphics.beginFill("green").drawRect(-40, -20, 80, 40);
            item.x = {{ node.x }};
            item.y = 50 + {{ node.y }};
            item.name = "{{ node.node }}";
            item.on("click", handleMouseEvent);
            item.on("dblclick", handleMouseEvent);
            item.on("mouseover", handleMouseEvent);
            stage.addChild(item);

            var label = new createjs.Text("{{ node.node }}", "14px Arial");
            label.x = item.x - 30;
            label.y = item.y - 5;
            stage.addChild(label);
        {% endfor %}

        {% for link in workflow.links %}
            var item = new createjs.Shape();
            item.graphics.beginFill("black").moveTo({{ workflow.nodes[link.source].x}}, {{ workflow.nodes[link.source].y}}).lineTo({{ workflow.nodes[link.target].x}}, {{ workflow.nodes[link.target].y}});
        {% endfor %}

        stage.update();
    }

    function handleMouseEvent(evt) {
        output.text = "evt.target: "+evt.target+", evt.type: "+evt.type;

        // to save CPU, we're only updating when we need to, instead of on a tick:1
        stage.update();
    }
</script>
{% endblock %}
